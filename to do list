#include <iostream>
#include <vector>

using namespace std;

class ToDoListManager {
private:
    struct Task {
        string description;
        bool completed;

        Task(const string& desc) : description(desc), completed(false) {}
    };

    vector<Task> tasks;

public:
    void addTask(const string& task) {
        Task newTask(task);
        tasks.push_back(newTask);
        cout << "Task \"" << task << "\" added successfully.\n";
    }

    void viewTasks() {
        if (tasks.empty()) {
            cout << "No tasks available.\n";
        } else {
            cout << "Tasks:\n";
            for (size_t i = 0; i < tasks.size(); ++i) {
                cout << i + 1 << ". ";
                cout << (tasks[i].completed ? "[Completed] " : "[Pending] ");
                cout << tasks[i].description << "\n";
            }
        }
    }

    void markTaskCompleted(size_t taskIndex) {
        if (taskIndex >= 1 && taskIndex <= tasks.size()) {
            tasks[taskIndex - 1].completed = true;
            cout << "Task marked as completed: \"" << tasks[taskIndex - 1].description << "\"\n";
        } else {
            cout << "Invalid task index. Please try again.\n";
        }
    }

    void deleteTask(size_t taskIndex) {
        if (taskIndex >= 1 && taskIndex <= tasks.size()) {
            string deletedTask = tasks[taskIndex - 1].description;
            tasks.erase(tasks.begin() + taskIndex - 1);
            cout << "Task \"" << deletedTask << "\" deleted successfully.\n";
        } else {
            cout << "Invalid task index. Please try again.\n";
        }
    }
};

int main() {
    ToDoListManager todoListManager;

    while (true) {
        cout << "\nMenu:\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Delete Task\n";
        cout << "5. Exit\n";

        int choice;
        cout << "Enter your choice (1-5): ";
        cin >> choice;

        switch (choice) {
            case 1: {
                string task;
                cout << "Enter the task: ";
                cin.ignore(); // Clear newline from the buffer
                getline(cin, task);
                todoListManager.addTask(task);
                break;
            }
            case 2:
                todoListManager.viewTasks();
                break;
            case 3: {
                size_t taskIndex;
                cout << "Enter the task index to mark as completed: ";
                cin >> taskIndex;
                todoListManager.markTaskCompleted(taskIndex);
                break;
            }
            case 4: {
                size_t taskIndex;
                cout << "Enter the task index to delete: ";
                cin >> taskIndex;
                todoListManager.deleteTask(taskIndex);
                break;
            }
            case 5:
                cout << "Exiting the to-do list manager. Goodbye!\n";
                return 0;
            default:
                cout << "Invalid choice. Please enter a number between 1 and 5.\n";
        }
    }

    return 0;
}
